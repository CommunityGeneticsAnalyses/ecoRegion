install.packages('XML')
library(XML)
colnames(stay)
library(rgl
)
plot3d(stay$BIO.6,stay$BIO.11,stay$BIO.15)
stay$Ecoregion
as.numeric(stay$Ecoregion)
colnames(bio.std)
bio.std
?plot3d
?plot3d
decorate3d(xlab='Bio6',ylab='Bio15',zlab='Bio11',expand=2)
?decorate3d
?rgl.snapshot
leg.names
leg.names
gsub('2010','2011','CCV 2010')
matrix(c('2010','1990','2050','2040','2080','2070'),nrow=2)
leg.names
leg.names
leg.names
leg.names
leg.names
leg.names
source('./ecoRegions.R')
move.all
colnames(move.all)
move.all[1,2:3]
move.all
move.all[,2:3]
x
?ggmap
move.all
f
col
x=move.all[,2:3]
f
mu
mu
sd
null(map)
null
x
mode(x)
map=x
x
mu
x=move.all[,2:3]
mu
mu
mu
f
mu
mu
apply(mu,2,range)
?get_map
?geom_line
ggmap(map)+
    geom_line(aes(x=Longitude,y=Latitidue),data=mu[8:9,],col='red')
?geom_line
arrow
?arrow
?arrow
unit
?units
?unit
?arrow
mu
mu
?arrow
mu
mu
mu
x
mu
warnings()
mu
sd
sd
x
mu
warnings()
mu
mu
f.x
x.f
table(x.f)
x.f
grepl('SD',x.f)
grepl('UHP',x.f)
grepl('CCV',x.f)
any(grepl('CCV',x.f))
grepl('SD',x.f)
any(grepl('SD',x.f))
any(grepl('UHP',x.f))
x[,2:3]
x[grepl('CCV',x.f),2:3]
warnings()
q()
n
q()
n
?get_map
?get_stamenmap
?get_stamenmap
?get_stamenmap
?stamen
?get_stamenmap
?get_stamenmap
?get_stamenmap
?get_map
?ggmap
names(map)
mode(map)
class(map)
map[[1]]
map[[2]]
map[1]
unlist(map)
map[[1]][[1]]
map. <- map
map[map=='#FFFFFF'] <- '#000000'
ggmap(map)
class(map)
mode(map)
map <- map.
mode(map.)
class(map.)
?raster
?ggmap
map
?ggmap-package
?ggmap-package
ggmap(map,darken=c(0.5,'grey'))
ggmap(map,darken=c(0.5,'red'))
ggmap(map,darken=c(1,'red'))
ggmap(map,darken=c(0.01,'red'))
ggmap(map,darken=c(0.01,'grey'))
ggmap(map,darken=c(0.1,'grey'))
ggmap(map,darken=c(0.2,'grey'))
map.col
grey(0.1)
table(map)
library(TeachingDemos)
library(ReadImages)
install.packages('ReadImages')
library(jpeg)
?rasterImage
inset
move.pch
move.all
?axis
head(move.all[,2:3])
head(x[,2:3])
head(x[,2:3])
mean(x[,2])
ggmap(map)
mu
mu
mu
?arrows
mu
f
move.all[,1]
move.all[,4]
tail(f)
tail(move.all[,1])
head(move.all[,1])
head(f)
head(move.all[4])
mu
mu
.loc <- locator(1)
.loc
.loc <- locator(2)
do.call(rbind,.loc)
t(do.call(rbind,.loc))
mu
mu[3,1]
mu[3,2]
mu[1,1]
mu[1,2]
mu
mu
?arrows
arrows
source('ecoRegions.R')
q()
n
